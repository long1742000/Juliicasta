<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.Juliicasta.Mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.shop.Juliicasta.Model.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="Code" jdbcType="VARCHAR" property="code" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="CategoryID" jdbcType="INTEGER" property="categoryid" />
    <result column="Price" jdbcType="INTEGER" property="price" />
    <result column="Detail" jdbcType="VARCHAR" property="detail" />
    <result column="DateImport" jdbcType="TIMESTAMP" property="dateimport" />
    <result column="MainImage" jdbcType="VARCHAR" property="mainimage" />
    <result column="HaveSize" jdbcType="BIT" property="havesize" />
    <result column="HaveColor" jdbcType="BIT" property="havecolor" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    ID, Code, Name, CategoryID, Price, Detail, DateImport, MainImage, HaveSize, HaveColor
  </sql>
  <select id="selectByExample" parameterType="com.shop.Juliicasta.Model.ProductExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    select 
    <include refid="Base_Column_List" />
    from product
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    delete from product
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shop.Juliicasta.Model.ProductExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shop.Juliicasta.Model.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    insert into product (ID, Code, Name, 
      CategoryID, Price, Detail, 
      DateImport, MainImage, HaveSize, 
      HaveColor)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{categoryid,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, #{detail,jdbcType=VARCHAR}, 
      #{dateimport,jdbcType=TIMESTAMP}, #{mainimage,jdbcType=VARCHAR}, #{havesize,jdbcType=BIT}, 
      #{havecolor,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.shop.Juliicasta.Model.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="code != null">
        Code,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="categoryid != null">
        CategoryID,
      </if>
      <if test="price != null">
        Price,
      </if>
      <if test="detail != null">
        Detail,
      </if>
      <if test="dateimport != null">
        DateImport,
      </if>
      <if test="mainimage != null">
        MainImage,
      </if>
      <if test="havesize != null">
        HaveSize,
      </if>
      <if test="havecolor != null">
        HaveColor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryid != null">
        #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="dateimport != null">
        #{dateimport,jdbcType=TIMESTAMP},
      </if>
      <if test="mainimage != null">
        #{mainimage,jdbcType=VARCHAR},
      </if>
      <if test="havesize != null">
        #{havesize,jdbcType=BIT},
      </if>
      <if test="havecolor != null">
        #{havecolor,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shop.Juliicasta.Model.ProductExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    update product
    <set>
      <if test="row.id != null">
        ID = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.code != null">
        Code = #{row.code,jdbcType=VARCHAR},
      </if>
      <if test="row.name != null">
        Name = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.categoryid != null">
        CategoryID = #{row.categoryid,jdbcType=INTEGER},
      </if>
      <if test="row.price != null">
        Price = #{row.price,jdbcType=INTEGER},
      </if>
      <if test="row.detail != null">
        Detail = #{row.detail,jdbcType=VARCHAR},
      </if>
      <if test="row.dateimport != null">
        DateImport = #{row.dateimport,jdbcType=TIMESTAMP},
      </if>
      <if test="row.mainimage != null">
        MainImage = #{row.mainimage,jdbcType=VARCHAR},
      </if>
      <if test="row.havesize != null">
        HaveSize = #{row.havesize,jdbcType=BIT},
      </if>
      <if test="row.havecolor != null">
        HaveColor = #{row.havecolor,jdbcType=BIT},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    update product
    set ID = #{row.id,jdbcType=INTEGER},
      Code = #{row.code,jdbcType=VARCHAR},
      Name = #{row.name,jdbcType=VARCHAR},
      CategoryID = #{row.categoryid,jdbcType=INTEGER},
      Price = #{row.price,jdbcType=INTEGER},
      Detail = #{row.detail,jdbcType=VARCHAR},
      DateImport = #{row.dateimport,jdbcType=TIMESTAMP},
      MainImage = #{row.mainimage,jdbcType=VARCHAR},
      HaveSize = #{row.havesize,jdbcType=BIT},
      HaveColor = #{row.havecolor,jdbcType=BIT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.Juliicasta.Model.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    update product
    <set>
      <if test="code != null">
        Code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryid != null">
        CategoryID = #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        Price = #{price,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        Detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="dateimport != null">
        DateImport = #{dateimport,jdbcType=TIMESTAMP},
      </if>
      <if test="mainimage != null">
        MainImage = #{mainimage,jdbcType=VARCHAR},
      </if>
      <if test="havesize != null">
        HaveSize = #{havesize,jdbcType=BIT},
      </if>
      <if test="havecolor != null">
        HaveColor = #{havecolor,jdbcType=BIT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.Juliicasta.Model.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 18 11:01:38 ICT 2022.
    -->
    update product
    set Code = #{code,jdbcType=VARCHAR},
      Name = #{name,jdbcType=VARCHAR},
      CategoryID = #{categoryid,jdbcType=INTEGER},
      Price = #{price,jdbcType=INTEGER},
      Detail = #{detail,jdbcType=VARCHAR},
      DateImport = #{dateimport,jdbcType=TIMESTAMP},
      MainImage = #{mainimage,jdbcType=VARCHAR},
      HaveSize = #{havesize,jdbcType=BIT},
      HaveColor = #{havecolor,jdbcType=BIT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- Lấy tất cả sản phẩm -->
  <select id="selectAllProduct" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * 
    from product order by id asc limit #{start}, 16
  </select>
  
  <!-- Đếm tổng số lượng loại sản phẩm -->
  <select id="countByCate" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(*) 
    from product where categoryid = #{cate}
  </select>
  
  <!-- Đếm tổng số lượng theo tên -->
  <select id="countByName" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) 
    from product where name like #{name}
  </select>
  
    <!-- Đếm tổng số lượng giá -->
  <select id="countByPrice" parameterType="map" resultType="java.lang.Integer">
    SELECT COUNT(*)
	FROM product
	WHERE price BETWEEN #{x} AND #{y};
  </select>
  
  <!-- Đếm tổng số lượng theo tên loại -->
  <select id="countByCateAndName" parameterType="map" resultType="java.lang.Integer">
    select count(*) 
    from product where categoryid = #{cate} and name like #{name}
  </select>
  
    <!-- Đếm tổng số lượng theo loại với giá -->
  <select id="countByCateAndPrice" parameterType="map" resultType="java.lang.Integer">
    SELECT COUNT(*)
	FROM product
	WHERE categoryid=#{cate} and price BETWEEN #{x} AND #{y};
  </select>
  
  <!-- Lấy sản phẩm theo loại với giá -->
  <select id="selectByCateAndPrice" parameterType="map" resultMap="BaseResultMap">
    select *
    from product where categoryid = #{cate} and price between #{x} and #{y} order by id asc limit #{start}, 16
  </select>
  
  <!-- Lấy tất cả sản phẩm theo category -->
  <select id="selectAllProductByCate" parameterType="map" resultMap="BaseResultMap">
    select * 
    from product where categoryid = #{cate} order by id asc limit #{start}, 16
  </select>
  
  <!-- Lấy tất cả sản phẩm theo category cho trang chi tiết sản phẩm -->
  <select id="selectAllProductByCateForProductDetail" parameterType="map" resultMap="BaseResultMap">
    select * 
    from product where categoryid = #{cate} order by id asc limit 0, 8
  </select>
  
  <!-- Lấy sản phẩm theo tên -->
  <select id="selectByName" parameterType="map" resultMap="BaseResultMap">
    select * 
    from product where name like #{name} order by id asc limit #{start}, 16
  </select>
  
    <!-- Lấy sản phẩm theo giá -->
  <select id="selectByPrice" parameterType="map" resultMap="BaseResultMap">
    select * 
    from product where price between #{x} AND #{y} order by id asc limit #{start}, 16
  </select>
  
  <!-- Lấy top (n) các sản phẩm mới -->
  <select id="selectTop" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select *
    from product order by id desc limit #{num}
  </select>
  
  <!-- Lấy sản phẩm theo Category và... -->
  <!-- Giá tăng dần -->
  <select id="selectByCateAndSortByPriceInc" parameterType="map" resultMap="BaseResultMap">
    select *
    from product where categoryid = #{cate} order by price asc limit #{start}, 16
  </select>
  
  <!-- Giá giảm dần -->
  <select id="selectByCateAndSortByPriceDec" parameterType="map" resultMap="BaseResultMap">
    select *
    from product where categoryid = #{cate} order by price desc limit #{start}, 16
  </select>
  
  <!-- Mới đến cũ -->
  <select id="selectByCateAndSortByNew" parameterType="map" resultMap="BaseResultMap">
    select *
    from product where categoryid = #{cate} order by id desc limit #{start}, 16
  </select>
  
  <!-- Cũ đến mới -->
  <select id="selectByCateAndSortByOld" parameterType="map" resultMap="BaseResultMap">
    select *
    from product where categoryid = #{cate} order by id asc limit #{start}, 16
  </select>
  
  <!-- Theo tên -->
  <select id="selectByCateAndName" parameterType="map" resultMap="BaseResultMap">
    select *
    from product where categoryid = #{cate} and name like #{name} order by id asc limit #{start}, 16
  </select>
  
  <!-- Theo giá nhỏ hơn -->
  <select id="selectByCateAndPriceLess" parameterType="map" resultMap="BaseResultMap">
    select *
    from product where categoryid = #{cate} and price &lt; #{price} order by price desc limit #{start}, 16
  </select>
  
  <!-- Theo giá lớn hơn -->
  <select id="selectByCateAndPriceLarger" parameterType="map" resultMap="BaseResultMap">
    select *
    from product where categoryid = #{cate} and price &gt; #{price} order by price asc limit #{start}, 16
  </select>
  
  <!-- Theo giá bằng -->
  <select id="selectByCateAndPriceEqual" parameterType="map" resultMap="BaseResultMap">
    select *
    from product where categoryid = #{cate} and price = #{price} order by id asc limit #{start}, 16
  </select>
  
  <!-- Sắp xếp sản phẩm theo giá tăng dần -->
  <select id="selectPriceInc" parameterType="map" resultMap="BaseResultMap">
    select *
    from product order by price asc limit #{start}, 16
  </select>
  
  <!-- Sắp xếp sản phẩm theo giá giảm dần -->
    <select id="selectPriceDec" parameterType="map" resultMap="BaseResultMap">
    select *
    from product order by price desc limit #{start}, 16
  </select>
  
  <!-- Sắp xếp sản phẩm mới đến cũ nhất -->
  <select id="selectDateNew" parameterType="map" resultMap="BaseResultMap">
    select *
    from product order by id desc limit #{start}, 16
  </select>
  
  <!-- Sắp xếp sản phẩm cũ đến mới nhất -->
  <select id="selectDateOld" parameterType="map" resultMap="BaseResultMap">
    select *
    from product order by id asc limit #{start}, 16
  </select>
  
   <!-- Lấy tất cả sản phẩm -->
  <select id="selectAllProductForAdmin" resultMap="BaseResultMap">
    select *
    from product
  </select>
  
  <!-- Lấy sản phẩm theo idCate -->
  <select id="selectProductByCateForAdmin" parameterType="Integer" resultMap="BaseResultMap">
    select *
    from product where categoryid=#{cate}
  </select>
</mapper>
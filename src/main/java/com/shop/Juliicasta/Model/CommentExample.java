package com.shop.Juliicasta.Model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Iterator;

public class CommentExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	public CommentExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andAccountidIsNull() {
			addCriterion("AccountID is null");
			return (Criteria) this;
		}

		public Criteria andAccountidIsNotNull() {
			addCriterion("AccountID is not null");
			return (Criteria) this;
		}

		public Criteria andAccountidEqualTo(Integer value) {
			addCriterion("AccountID =", value, "accountid");
			return (Criteria) this;
		}

		public Criteria andAccountidNotEqualTo(Integer value) {
			addCriterion("AccountID <>", value, "accountid");
			return (Criteria) this;
		}

		public Criteria andAccountidGreaterThan(Integer value) {
			addCriterion("AccountID >", value, "accountid");
			return (Criteria) this;
		}

		public Criteria andAccountidGreaterThanOrEqualTo(Integer value) {
			addCriterion("AccountID >=", value, "accountid");
			return (Criteria) this;
		}

		public Criteria andAccountidLessThan(Integer value) {
			addCriterion("AccountID <", value, "accountid");
			return (Criteria) this;
		}

		public Criteria andAccountidLessThanOrEqualTo(Integer value) {
			addCriterion("AccountID <=", value, "accountid");
			return (Criteria) this;
		}

		public Criteria andAccountidIn(List<Integer> values) {
			addCriterion("AccountID in", values, "accountid");
			return (Criteria) this;
		}

		public Criteria andAccountidNotIn(List<Integer> values) {
			addCriterion("AccountID not in", values, "accountid");
			return (Criteria) this;
		}

		public Criteria andAccountidBetween(Integer value1, Integer value2) {
			addCriterion("AccountID between", value1, value2, "accountid");
			return (Criteria) this;
		}

		public Criteria andAccountidNotBetween(Integer value1, Integer value2) {
			addCriterion("AccountID not between", value1, value2, "accountid");
			return (Criteria) this;
		}

		public Criteria andProductidIsNull() {
			addCriterion("ProductID is null");
			return (Criteria) this;
		}

		public Criteria andProductidIsNotNull() {
			addCriterion("ProductID is not null");
			return (Criteria) this;
		}

		public Criteria andProductidEqualTo(Integer value) {
			addCriterion("ProductID =", value, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidNotEqualTo(Integer value) {
			addCriterion("ProductID <>", value, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidGreaterThan(Integer value) {
			addCriterion("ProductID >", value, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidGreaterThanOrEqualTo(Integer value) {
			addCriterion("ProductID >=", value, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidLessThan(Integer value) {
			addCriterion("ProductID <", value, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidLessThanOrEqualTo(Integer value) {
			addCriterion("ProductID <=", value, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidIn(List<Integer> values) {
			addCriterion("ProductID in", values, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidNotIn(List<Integer> values) {
			addCriterion("ProductID not in", values, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidBetween(Integer value1, Integer value2) {
			addCriterion("ProductID between", value1, value2, "productid");
			return (Criteria) this;
		}

		public Criteria andProductidNotBetween(Integer value1, Integer value2) {
			addCriterion("ProductID not between", value1, value2, "productid");
			return (Criteria) this;
		}

		public Criteria andContentIsNull() {
			addCriterion("Content is null");
			return (Criteria) this;
		}

		public Criteria andContentIsNotNull() {
			addCriterion("Content is not null");
			return (Criteria) this;
		}

		public Criteria andContentEqualTo(String value) {
			addCriterion("Content =", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotEqualTo(String value) {
			addCriterion("Content <>", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentGreaterThan(String value) {
			addCriterion("Content >", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentGreaterThanOrEqualTo(String value) {
			addCriterion("Content >=", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLessThan(String value) {
			addCriterion("Content <", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLessThanOrEqualTo(String value) {
			addCriterion("Content <=", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLike(String value) {
			addCriterion("Content like", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotLike(String value) {
			addCriterion("Content not like", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentIn(List<String> values) {
			addCriterion("Content in", values, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotIn(List<String> values) {
			addCriterion("Content not in", values, "content");
			return (Criteria) this;
		}

		public Criteria andContentBetween(String value1, String value2) {
			addCriterion("Content between", value1, value2, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotBetween(String value1, String value2) {
			addCriterion("Content not between", value1, value2, "content");
			return (Criteria) this;
		}

		public Criteria andDatecreateIsNull() {
			addCriterion("DateCreate is null");
			return (Criteria) this;
		}

		public Criteria andDatecreateIsNotNull() {
			addCriterion("DateCreate is not null");
			return (Criteria) this;
		}

		public Criteria andDatecreateEqualTo(Date value) {
			addCriterionForJDBCDate("DateCreate =", value, "datecreate");
			return (Criteria) this;
		}

		public Criteria andDatecreateNotEqualTo(Date value) {
			addCriterionForJDBCDate("DateCreate <>", value, "datecreate");
			return (Criteria) this;
		}

		public Criteria andDatecreateGreaterThan(Date value) {
			addCriterionForJDBCDate("DateCreate >", value, "datecreate");
			return (Criteria) this;
		}

		public Criteria andDatecreateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("DateCreate >=", value, "datecreate");
			return (Criteria) this;
		}

		public Criteria andDatecreateLessThan(Date value) {
			addCriterionForJDBCDate("DateCreate <", value, "datecreate");
			return (Criteria) this;
		}

		public Criteria andDatecreateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("DateCreate <=", value, "datecreate");
			return (Criteria) this;
		}

		public Criteria andDatecreateIn(List<Date> values) {
			addCriterionForJDBCDate("DateCreate in", values, "datecreate");
			return (Criteria) this;
		}

		public Criteria andDatecreateNotIn(List<Date> values) {
			addCriterionForJDBCDate("DateCreate not in", values, "datecreate");
			return (Criteria) this;
		}

		public Criteria andDatecreateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("DateCreate between", value1, value2, "datecreate");
			return (Criteria) this;
		}

		public Criteria andDatecreateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("DateCreate not between", value1, value2, "datecreate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table comment
	 * @mbg.generated  Wed Jul 06 20:47:06 ICT 2022
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbg.generated do_not_delete_during_merge Wed Apr 20 22:57:00 ICT 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}